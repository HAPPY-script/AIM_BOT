game.StarterGui:SetCore("SendNotification", {
    Title = "created by HAPPY script";
    Text = "aim player";
    Duration = 5;
})
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 250, 0, 150)
Frame.Position = UDim2.new(0.5, -125, 0.5, -75)
Frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
Frame.BorderSizePixel = 2
Frame.Parent = ScreenGui
Frame.Visible = false

local dragging = false
local dragStart = nil
local startPos = nil
local smoothSpeed = 0.12 -- Độ trượt mượt
local UserInputService = game:GetService("UserInputService")

-- Kéo menu
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        local goalPosition = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
        Frame:TweenPosition(goalPosition, "Out", "Quad", smoothSpeed, true)
    end
end)

local silentAimEnabled = false
local selectedKey = nil

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.8, 0, 0.2, 0)
ToggleButton.Position = UDim2.new(0.1, 0, 0.1, 0)
ToggleButton.BackgroundColor3 = Color3.new(0.3, 0.6, 0.3)
ToggleButton.Text = "Silent Aim: OFF"
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18
ToggleButton.Parent = Frame

local KeyInputButton = Instance.new("TextButton")
KeyInputButton.Size = UDim2.new(0.8, 0, 0.2, 0)
KeyInputButton.Position = UDim2.new(0.1, 0, 0.4, 0)
KeyInputButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.6)
KeyInputButton.Text = "Set Key: None"
KeyInputButton.TextColor3 = Color3.new(1, 1, 1)
KeyInputButton.Font = Enum.Font.SourceSansBold
KeyInputButton.TextSize = 18
KeyInputButton.Parent = Frame

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0.2, 0, 0.2, 0)
CloseButton.Position = UDim2.new(0.8, 0, 0, 0)
CloseButton.BackgroundColor3 = Color3.new(1, 0, 0)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 14
CloseButton.Parent = Frame

Frame.Visible = true
Frame:TweenPosition(UDim2.new(0.5, -125, 0.5, -75), "Out", "Quad", 0.5, true)

-- Chức năng bật/tắt Silent Aim
ToggleButton.MouseButton1Click:Connect(function()
    silentAimEnabled = not silentAimEnabled
    if silentAimEnabled then
        ToggleButton.Text = "Silent Aim: ON"
        ToggleButton.BackgroundColor3 = Color3.new(0, 0.6, 0)
    else
        ToggleButton.Text = "Silent Aim: OFF"
        ToggleButton.BackgroundColor3 = Color3.new(0.6, 0, 0)
    end
end)

-- Chức năng đóng menu
CloseButton.MouseButton1Click:Connect(function()
    Frame:TweenPosition(UDim2.new(0.5, -125, 1.2, 0), "In", "Quad", 0.5, true, function()
        ScreenGui:Destroy()
    end)
end)

-- Chọn phím kích hoạt
local settingKey = false
KeyInputButton.MouseButton1Click:Connect(function()
    settingKey = true
    KeyInputButton.Text = "Press Any Key..."
end)

game:GetService("UserInputService").InputBegan:Connect(function(input)
    if settingKey then
        if input.UserInputType == Enum.UserInputType.Keyboard or input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.MouseButton2 then
            selectedKey = input.KeyCode or input.UserInputType
            KeyInputButton.Text = "Set Key: " .. (selectedKey.Name or tostring(selectedKey))
            settingKey = false
        end
    end
end)

-- Kiểm tra trạng thái giữ phím
local isKeyHeld = false
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == selectedKey or input.UserInputType == selectedKey then
        isKeyHeld = true
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.KeyCode == selectedKey or input.UserInputType == selectedKey then
        isKeyHeld = false
    end
end)

-- Tìm người chơi gần nhất trong phạm vi
local function GetClosestPlayerHeadInRange()
    local closestPlayer = nil
    local closestScreenDistance = math.huge
    local crosshairPosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local maxRadius = 200  -- Bán kính tối đa tính từ tâm nhắm

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local screenPoint, onScreen = camera:WorldToViewportPoint(otherPlayer.Character.Head.Position)
            if onScreen then
                local screenPosition = Vector2.new(screenPoint.X, screenPoint.Y)
                local screenDistance = (screenPosition - crosshairPosition).magnitude
                if screenDistance < closestScreenDistance and screenDistance <= maxRadius then
                    closestScreenDistance = screenDistance
                    closestPlayer = otherPlayer
                end
            end
        end
    end
    return closestPlayer
end

-- Tự động nhắm vào đầu người chơi
local function AimAtPlayerHead()
    if not silentAimEnabled or not isKeyHeld then return end

    local targetPlayer = GetClosestPlayerHeadInRange()
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local targetPosition = targetPlayer.Character.Head.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
    end
end

game:GetService("RunService").RenderStepped:Connect(AimAtPlayerHead)

--cross
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- Tạo GUI cho cross
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Tạo thanh ngang của cross
local horizontalBar = Instance.new("Frame")
horizontalBar.Size = UDim2.new(0, 12, 0, 2) -- Dài 12px, cao 2px
horizontalBar.AnchorPoint = Vector2.new(0.5, 0.5)
horizontalBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Màu xanh lá
horizontalBar.BorderSizePixel = 0
horizontalBar.Parent = screenGui

-- Tạo thanh dọc của cross
local verticalBar = Instance.new("Frame")
verticalBar.Size = UDim2.new(0, 2, 0, 12) -- Dài 12px, rộng 2px
verticalBar.AnchorPoint = Vector2.new(0.5, 0.5)
verticalBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Màu xanh lá
verticalBar.BorderSizePixel = 0
verticalBar.Parent = screenGui

-- Cập nhật vị trí cross dựa trên con trỏ chuột
local function updateCrosshairPosition()
    local mousePosition = UserInputService:GetMouseLocation() -- Vị trí chuột (màn hình)
    local adjustedPosition = Vector2.new(mousePosition.X, mousePosition.Y - 58) -- Trừ 36 để bù thanh công cụ Roblox

    horizontalBar.Position = UDim2.new(0, adjustedPosition.X, 0, adjustedPosition.Y)
    verticalBar.Position = UDim2.new(0, adjustedPosition.X, 0, adjustedPosition.Y)
end

-- Lắng nghe sự kiện chuột di chuyển
UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        updateCrosshairPosition()
    end
end)

-- Đảm bảo cross luôn đúng vị trí khi khởi động
updateCrosshairPosition()
